from StoreVectors import StoreVectors
import numpy as np
import boto3
import io,os
from PIL import Image

s3 = boto3.client('s3',
                      aws_access_key_id=os.environ.get('AWS_ACCESS_KEY_ID'),
                      aws_secret_access_key=os.environ.get('AWS_SECRET_ACCESS_KEY'))
api_key = '13fadf20-cd84-43e0-bda3-609c6eca3183'



def train_image_s3aws():
    s3 = boto3.resource('s3', region_name='ap-southeast-1')
    bucket = s3.Bucket('malware-detector')
    object = bucket.Object('ransomwares/000e56b54059472d4f28e0d521cf87407f5b0d88.jpg')
    response = object.get()
    file_stream = response['Body']
    im = Image.open(file_stream)
    print(np.array(im))

def train_image_from_s3(bucket, key):
    try:
        response = s3.get_object(Bucket=bucket, Key=key)
        img_data = response['Body'].read()
        img = Image.open(io.BytesIO(img_data))
        indexer = StoreVectors(api_key)
        indexer.store_image(img,key)
    except Exception as e:
        print(f"Error: {e}")
        return None

def list_objects_in_folder(bucket, folder):
    s3 = boto3.client('s3',
                      aws_access_key_id=os.environ.get('AWS_ACCESS_KEY_ID'),
                      aws_secret_access_key=os.environ.get('AWS_SECRET_ACCESS_KEY'))
    response = s3.list_objects_v2(
        Bucket=bucket,
        Prefix=folder
    )
    if 'Contents' in response:
        return [obj['Key'] for obj in response['Contents']]
    else:
        return []
    
if __name__ == "__main__":
    for obj in list_objects_in_folder("malware-detector","ransomwares/"):
        train_image_from_s3("malware-detector",obj)